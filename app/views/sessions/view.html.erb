
<script src="//static.opentok.com/webrtc/v2.2/js/opentok.min.js"></script>
<script src="//ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script>
$(function() {
  var appSessionId = 0;
  try {
    appSessionId = parseInt("<%= @session.session_id %>");//this maps our app's session id to tokbox's session id
  }
  catch(e)
  {
    console.error(e);
  }

  if(typeof appSessionId === typeof 0) {
// API KEY
    var apiKey    = "45238082";
    var sessionId = "";  //tokbox session id
    var token = "";

    var jqxhr = $.ajax({
      url: "/session/" + appSessionId + "/token",
      type: "GET",
      async: false
    })
    .done(function(r) {
      console.dir(r);
      sessionId = r.session_id;
      token = r.token;
    })
    .fail(function(r, textStatus){
      console.error("Failed."  + textStatus);
      console.error("text: " + r.responseText);
      $('body').prepend('Failed to get token.');
    });

    console.log(apiKey);
    var session = OT.initSession(apiKey, sessionId);

    console.log('session_setup', session)

    session.connect(token, function(error) {
      var publisher = OT.initPublisher();
      // console.log('connect publish');
      session.publish(publisher);

      //TODO: move #OT_143cad9c_545e_4e72_b16d_76231405e530 to #publisher

    });

    var isPublisherConnected = false;
    var isSubscriberConnected = false;
    var isConnected = false;

    session.on({
      // This function runs when session.connect() asynchronously completes

      //This code below causes screen to duplicate:

      // sessionConnected: function(event) {
      //   console.log('session_connected', session)
      //   // Publish the publisher we initialzed earlier (this will trigger 'streamCreated' on other
      //   // clients)
      //   session.publish(publisher);
      // },

      // This function runs when another client publishes a stream (eg. session.publish())
      streamCreated: function(event) {
        if (!isConnected){
          console.log('session_created', session)
          // Create a container for a new Subscriber, assign it an id using the streamId, put it inside
          // the element with id="subscribers"
          var subContainer = document.createElement('div');
          subContainer.id = 'stream-' + event.stream.streamId;

          // first time through, target publisher
          if (!isSubscriberConnected){
            document.getElementById('subscriber').appendChild(subContainer);
            isSubscriberConnected = true;
          }

          // Subscribe to the stream that caused this event, put it inside the container we just made
          session.subscribe(event.stream, subContainer);
          isConnected = true;
        }
      },
      // Receive a message and append it to the history
      'signal:chat': function(event) {
          var msg = document.createElement('p');
          msg.innerHTML = event.data;
          msg.className = event.from.connectionId === session.connection.connectionId ? 'mine' : 'theirs';
          document.querySelector('#history').appendChild(msg);
          msg.scrollIntoView();
      }
    });




    $(window).unload(function() {
      session.disconnect();
    });
  }
  else
  {
    $('body').prepend("Must specify app session id in querystring.");
  }




  // Text Chat
  var form = document.querySelector('form');
  var msgTxt = document.querySelector('#msgTxt');

  console.log(form);

  // Send a signal once the user enters data in the form.This will send the data entered to all participants
  form.addEventListener('submit', function(event) {
    event.preventDefault();

    session.signal({
        type: 'chat',
        data: msgTxt.value
    }, function(error) {
        if (!error) {
            msgTxt.value = '';
        }
    });
  });

});

</script>

  <div id="videos">

      Doctor
        <div id="subscriber"></div>
        Self
        <div id="publisher"></div>

  </div>

 <div id="textchat">

 <div id="history"></div>

        <form>

        <input type="text" placeholder="Write your message here" id="msgTxt"></input>

        </form>

    <p><%= link_to "Index", "/session/index", :id => "end-session", method: :get %></p>



